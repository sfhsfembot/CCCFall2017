// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc692.CCCFall2017;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.RobotDrive;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.Talon;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.livewindow.LiveWindow;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static SpeedController climberClimberMotor_PWM_0;
    public static SpeedController feederFeederMotor_PWM_1;
    public static SpeedController shooterShooterMotor_PWM_2;
    public static SpeedController intakeIntakeMotor_PWM_3;
    public static SpeedController driveTrainLeftFrontSpeedController_PWM_4;
    public static SpeedController driveTrainRightFrontSpeedController_PWM_5;
    public static SpeedController driveTrainLeftRearSpeedController_PWM_6;
    public static SpeedController driveTrainRightRearSpeedController_PWM_7;
    public static RobotDrive driveTrainRobotDrive41;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public static void init() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        climberClimberMotor_PWM_0 = new Talon(0);
        LiveWindow.addActuator("Climber", "ClimberMotor_PWM_0", (Talon) climberClimberMotor_PWM_0);
        
        feederFeederMotor_PWM_1 = new Talon(1);
        LiveWindow.addActuator("Feeder", "FeederMotor_PWM_1", (Talon) feederFeederMotor_PWM_1);
        
        shooterShooterMotor_PWM_2 = new Talon(2);
        LiveWindow.addActuator("Shooter", "ShooterMotor_PWM_2", (Talon) shooterShooterMotor_PWM_2);
        
        intakeIntakeMotor_PWM_3 = new Talon(3);
        LiveWindow.addActuator("Intake", "IntakeMotor_PWM_3", (Talon) intakeIntakeMotor_PWM_3);
        
        driveTrainLeftFrontSpeedController_PWM_4 = new Talon(4);
        LiveWindow.addActuator("DriveTrain", "LeftFrontSpeedController_PWM_4", (Talon) driveTrainLeftFrontSpeedController_PWM_4);
        
        driveTrainRightFrontSpeedController_PWM_5 = new Talon(5);
        LiveWindow.addActuator("DriveTrain", "RightFrontSpeedController_PWM_5", (Talon) driveTrainRightFrontSpeedController_PWM_5);
        
        driveTrainLeftRearSpeedController_PWM_6 = new Talon(6);
        LiveWindow.addActuator("DriveTrain", "LeftRearSpeedController_PWM_6", (Talon) driveTrainLeftRearSpeedController_PWM_6);
        
        driveTrainRightRearSpeedController_PWM_7 = new Talon(7);
        LiveWindow.addActuator("DriveTrain", "RightRearSpeedController_PWM_7", (Talon) driveTrainRightRearSpeedController_PWM_7);
        
        driveTrainRobotDrive41 = new RobotDrive(driveTrainLeftFrontSpeedController_PWM_4, driveTrainLeftRearSpeedController_PWM_6,
              driveTrainRightFrontSpeedController_PWM_5, driveTrainRightRearSpeedController_PWM_7);
        
        driveTrainRobotDrive41.setSafetyEnabled(true);
        driveTrainRobotDrive41.setExpiration(0.1);
        driveTrainRobotDrive41.setSensitivity(0.5);
        driveTrainRobotDrive41.setMaxOutput(1.0);
        driveTrainRobotDrive41.setInvertedMotor(RobotDrive.MotorType.kFrontLeft, true);
        driveTrainRobotDrive41.setInvertedMotor(RobotDrive.MotorType.kRearLeft, true);
        driveTrainRobotDrive41.setInvertedMotor(RobotDrive.MotorType.kFrontRight, true);
        driveTrainRobotDrive41.setInvertedMotor(RobotDrive.MotorType.kRearRight, true);

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }
}
